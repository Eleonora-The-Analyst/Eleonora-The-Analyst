with first_payments as
    (select user_id
            , min (date_trunc ('day', transaction_datetime)) as first_payment_date
    FROM skyeng_db.payments
    where status_name = 'success'
    group by user_id
    order by user_id
    ),
all_dates as
    (select distinct date_trunc ('day', class_start_datetime::date) as dt
    from skyeng_db.classes
    where class_start_datetime between '2015-12-31' and '2017-01-01' 
    order by dt
    ),
payments_by_dates as
    (SELECT  user_id
            , transaction_datetime::date as payment_date
            , sum (classes) as transaction_balance_change
    FROM skyeng_db.payments
    where status_name = 'success'
    group by  user_id
            , payment_date
    order by user_id
    ),
all_dates_by_user as
    (select user_id, dt
    from all_dates 
    join first_payments
    on all_dates.dt >= first_payments.first_payment_date
    order by 1,2
    ),
classes_by_dates as    
    (select user_id
            , class_start_datetime::date as class_date
            , count (id_class)*-1 as classes 
    from skyeng_db.classes 
    where class_status in ('success', 'failed_by_student') and class_type != 'trial'
    group by 1,2
    order by 1,2
    ),
payments_by_dates_cumsum as
    (select  all_dates_by_user.user_id
            , dt
            , coalesce (transaction_balance_change,0) as transaction_balance_change
            , sum (transaction_balance_change) over (partition by all_dates_by_user.user_id order by dt) as transaction_balance_change_cs
    from all_dates_by_user left join payments_by_dates
        on all_dates_by_user.dt = payments_by_dates.payment_date 
        and all_dates_by_user.user_id = payments_by_dates.user_id
    ),
classes_by_dates_dates_cumsum as
    (select  all_dates_by_user.user_id
            , dt
            , coalesce (classes,0) as classes
            , sum (coalesce (classes,0)) over (partition by all_dates_by_user.user_id order by dt) as classes_cs
    from all_dates_by_user left join classes_by_dates
        on all_dates_by_user.dt = classes_by_dates.class_date
        and all_dates_by_user.user_id = classes_by_dates.user_id
    ),
balances as 
    (select a.user_id
            , a.dt
            , a.transaction_balance_change
            , a.transaction_balance_change_cs
            , b.classes
            , b.classes_cs
            , a.transaction_balance_change_cs + b.classes_cs as balance
    from payments_by_dates_cumsum a join classes_by_dates_dates_cumsum b 
        on a.user_id = b.user_id
        and a.dt = b.dt
    )
-- Выберите топ-1000 строк из CTE balances с сортировкой по user_id и dt. Посмотрите на изменения балансов студентов. Есть отрицательные значения в столбце 'balance', почему? (вопрос дата-инженерам и владельцам таблицы payments)    
-- select *
-- from balances
-- order by balances.user_id, balances.dt
-- limit 1000
select  dt
        , sum (transaction_balance_change) as sum_transaction_balance_change
        , sum (transaction_balance_change_cs) as sum_transaction_balance_change_cs
        , sum (classes) as sum_classes
        , sum (classes_cs) as sum_classes_cs
        , sum (balance) as sum_balance
from balances
group by dt
order by dt
--Выводы: В 2016 году наблюдается значительный рост продаж уроков. Но если смотреть данные на ежедневной основе, то можем наблюдать, что продажи идут очень неравномерно.
--Возможно, это связанно с какими-то акциями в определенные дни, но лучше уточнить у отдела продаж.
--Также вызывают вопросы отрицательные значения в столбце 'balance' (если вывести таблицу balances), возможно они были начислены студентам также в рамках каких либо акций.
--Такое наблюдается у 187 студентов и максимальное отрицательное значение равно -4 (уточнить у отдела маркетинга)
